{"ast":null,"code":"var _jsxFileName = \"D:\\\\Doc Sign\\\\client\\\\src\\\\pages\\\\DocumentViewerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PDFRenderer from '../components/PDFRenderer';\nimport Header from '../components/Header';\n\n// TODO: Integrate signature overlay and placement logic\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentViewerPage = () => {\n  _s();\n  // For now, use a placeholder for the PDF file (replace with real file logic)\n  const [pdfFile, setPdfFile] = useState(null); // Blob or URL\n\n  // Example: handle file upload (for testing)\n  const handleFileChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setPdfFile(e.target.files[0]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 flex flex-col items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-5xl mx-auto flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Document Viewer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"application/pdf\",\n          onChange: handleFileChange,\n          className: \"mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), pdfFile ? /*#__PURE__*/_jsxDEV(PDFRenderer, {\n          file: pdfFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500\",\n          children: \"Upload a PDF to preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentViewerPage, \"SeXhGGYWjJO1liTlK0g63Pi9VL8=\");\n_c = DocumentViewerPage;\nexport default DocumentViewerPage;\nvar _c;\n$RefreshReg$(_c, \"DocumentViewerPage\");","map":{"version":3,"names":["React","useState","PDFRenderer","Header","jsxDEV","_jsxDEV","DocumentViewerPage","_s","pdfFile","setPdfFile","handleFileChange","e","target","files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","file","_c","$RefreshReg$"],"sources":["D:/Doc Sign/client/src/pages/DocumentViewerPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PDFRenderer from '../components/PDFRenderer';\r\nimport Header from '../components/Header';\r\n\r\n// TODO: Integrate signature overlay and placement logic\r\n\r\nconst DocumentViewerPage = () => {\r\n  // For now, use a placeholder for the PDF file (replace with real file logic)\r\n  const [pdfFile, setPdfFile] = useState(null); // Blob or URL\r\n\r\n  // Example: handle file upload (for testing)\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setPdfFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\r\n      <Header />\r\n      <main className=\"flex-1 flex flex-col items-center justify-center p-4\">\r\n        <div className=\"w-full max-w-5xl mx-auto flex flex-col items-center\">\r\n          <h1 className=\"text-2xl font-bold mb-4\">Document Viewer</h1>\r\n          {/* File upload for testing (remove in production) */}\r\n          <input type=\"file\" accept=\"application/pdf\" onChange={handleFileChange} className=\"mb-4\" />\r\n          {/* PDF Renderer */}\r\n          {pdfFile ? (\r\n            <PDFRenderer file={pdfFile} />\r\n          ) : (\r\n            <div className=\"text-gray-500\">Upload a PDF to preview</div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentViewerPage; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,sBAAsB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,IAAIF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MACvCJ,UAAU,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/B;EACF,CAAC;EAED,oBACER,OAAA;IAAKS,SAAS,EAAC,uCAAuC;IAAAC,QAAA,gBACpDV,OAAA,CAACF,MAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVd,OAAA;MAAMS,SAAS,EAAC,sDAAsD;MAAAC,QAAA,eACpEV,OAAA;QAAKS,SAAS,EAAC,qDAAqD;QAAAC,QAAA,gBAClEV,OAAA;UAAIS,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE5Dd,OAAA;UAAOe,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,iBAAiB;UAACC,QAAQ,EAAEZ,gBAAiB;UAACI,SAAS,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAE1FX,OAAO,gBACNH,OAAA,CAACH,WAAW;UAACqB,IAAI,EAAEf;QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAE9Bd,OAAA;UAAKS,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAC5D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACZ,EAAA,CA7BID,kBAAkB;AAAAkB,EAAA,GAAlBlB,kBAAkB;AA+BxB,eAAeA,kBAAkB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}