{"version":3,"file":"static/js/820.cfdd2ba1.chunk.js","mappings":"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","sources":["pages/PublicSignPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useAuth, api } from '../context/AuthContext';\r\nimport PDFRenderer from '../components/PDFRenderer';\r\nimport SignatureInputModal from '../components/SignatureInputModal';\r\n\r\nconst PublicSignPage = () => {\r\n  const { token } = useParams();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [document, setDocument] = useState(null);\r\n  const [signer, setSigner] = useState(null);\r\n  const [pdfUrl, setPdfUrl] = useState(null);\r\n  const [signatureField, setSignatureField] = useState(null);\r\n  const [signatureImage, setSignatureImage] = useState(null);\r\n  const [signatureType, setSignatureType] = useState(null);\r\n  const [showSignatureModal, setShowSignatureModal] = useState(false);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [signature, setSignature] = useState(null);\r\n  const [clickCoords, setClickCoords] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchSignature = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const res = await api.get(`/api/signatures/${token}`);\r\n        setSignature(res.data.signature);\r\n        setDocument(res.data.document);\r\n        setSigner(res.data.signature?.signerEmail ? { email: res.data.signature.signerEmail } : null);\r\n        setPdfUrl(`/api/docs/${res.data.document._id}/download`);\r\n      } catch (e) {\r\n        setError(e.response?.data?.message || 'Failed to load document.');\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchSignature();\r\n  }, [token]);\r\n\r\n  const handleAddField = (pageNumber, x, y, pageDims) => {\r\n    if (!signatureImage) {\r\n      setClickCoords({ x, y, page: pageNumber, pageDims });\r\n      setShowSignatureModal(true);\r\n      return;\r\n    }\r\n    \r\n    // Calculate signature position relative to page dimensions\r\n    const signatureWidth = 200; // Default width\r\n    const signatureHeight = 100; // Default height\r\n    \r\n    const newField = {\r\n      id: `signature-${Date.now()}`,\r\n      x: x - (signatureWidth / 2), // Center the signature on click\r\n      y: y - (signatureHeight / 2),\r\n      page: pageNumber,\r\n      width: signatureWidth,\r\n      height: signatureHeight,\r\n      image: signatureImage,\r\n      type: signatureType,\r\n      pageDims // Store page dimensions for reference\r\n    };\r\n    \r\n    setSignatureField(newField);\r\n  };\r\n\r\n  const handleFieldMove = (field) => {\r\n    setSignatureField(field);\r\n  };\r\n\r\n  const handleSignatureSave = (img, type) => {\r\n    setSignatureImage(img);\r\n    setSignatureType(type);\r\n    setShowSignatureModal(false);\r\n    \r\n    // If we have saved coordinates, create the signature field\r\n    if (clickCoords) {\r\n      const signatureWidth = 200;\r\n      const signatureHeight = 100;\r\n      \r\n      const newField = {\r\n        id: `signature-${Date.now()}`,\r\n        x: clickCoords.x - (signatureWidth / 2), // Center the signature on click\r\n        y: clickCoords.y - (signatureHeight / 2),\r\n        page: clickCoords.page,\r\n        width: signatureWidth,\r\n        height: signatureHeight,\r\n        image: img,\r\n        type: type,\r\n        pageDims: clickCoords.pageDims\r\n      };\r\n      \r\n      setSignatureField(newField);\r\n      setClickCoords(null);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!signatureField) return;\r\n    setSubmitting(true);\r\n    setError(null);\r\n    try {\r\n      await api.put(`/api/signatures/${token}`, {\r\n        signatureData: signatureField,\r\n        signatureType,\r\n      });\r\n      setSuccess(true);\r\n    } catch (e) {\r\n      setError(e.response?.data?.message || 'Failed to submit signature.');\r\n    }\r\n    setSubmitting(false);\r\n  };\r\n\r\n  const handleReject = async () => {\r\n    setSubmitting(true);\r\n    setError(null);\r\n    try {\r\n      await api.post(`/api/signatures/${token}/reject`);\r\n      setSuccess(true);\r\n    } catch (e) {\r\n      setError(e.response?.data?.message || 'Failed to reject signature.');\r\n    }\r\n    setSubmitting(false);\r\n  };\r\n\r\n  if (loading) return <div className=\"min-h-screen flex items-center justify-center\">Loading...</div>;\r\n  if (error) return (\r\n    <div className=\"min-h-screen flex items-center justify-center\">\r\n      <div className=\"bg-white p-8 rounded shadow text-red-600\">{error}</div>\r\n    </div>\r\n  );\r\n  if (success) return (\r\n    <div className=\"min-h-screen flex items-center justify-center\">\r\n      <div className=\"bg-white p-8 rounded shadow text-green-600 text-xl font-semibold\">Thank you! Your signature has been submitted.</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n      <SignatureInputModal\r\n        open={showSignatureModal}\r\n        onClose={() => setShowSignatureModal(false)}\r\n        onSave={handleSignatureSave}\r\n      />\r\n      <div className=\"w-full max-w-3xl p-8 bg-white rounded-2xl shadow-md\">\r\n        <h1 className=\"text-2xl font-semibold text-indigo-600 mb-4\">Sign Document</h1>\r\n        <div className=\"mb-2 text-gray-700\">Signer: <span className=\"font-mono\">{signer?.email}</span></div>\r\n        <div className=\"mb-6 text-gray-500 text-sm\">Click on the document to place your signature.</div>\r\n        <div className=\"border rounded overflow-hidden mb-4\">\r\n          <PDFRenderer \r\n            file={pdfUrl} \r\n            onPageClick={handleAddField}\r\n            signatureFields={signatureField ? [signatureField] : []}\r\n            onUpdateField={setSignatureField}\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"mt-4 bg-indigo-600 text-white px-6 py-2 rounded hover:bg-indigo-700 disabled:opacity-50\"\r\n          onClick={handleSubmit}\r\n          disabled={!signatureField || submitting}\r\n        >\r\n          {submitting ? 'Submitting...' : 'Submit Signature'}\r\n        </button>\r\n        <button\r\n          className=\"mt-4 ml-4 bg-rose-600 text-white px-6 py-2 rounded hover:bg-rose-700 disabled:opacity-50\"\r\n          onClick={handleReject}\r\n          disabled={submitting}\r\n        >\r\n          Reject\r\n        </button>\r\n        {!signatureImage && (\r\n          <div className=\"mt-4 text-sm text-gray-500\">\r\n            Please add your signature to continue.\r\n            <button \r\n              className=\"ml-2 text-indigo-600 underline\" \r\n              onClick={() => setShowSignatureModal(true)}\r\n            >\r\n              Add Signature\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PublicSignPage; "],"names":["PublicSignPage","token","useParams","loading","setLoading","useState","error","setError","document","setDocument","signer","setSigner","pdfUrl","setPdfUrl","signatureField","setSignatureField","signatureImage","setSignatureImage","signatureType","setSignatureType","showSignatureModal","setShowSignatureModal","submitting","setSubmitting","success","setSuccess","signature","setSignature","clickCoords","setClickCoords","useEffect","async","_res$data$signature","res","api","get","concat","data","signerEmail","email","_id","e","_e$response","_e$response$data","response","message","fetchSignature","_jsx","className","children","_jsxs","SignatureInputModal","open","onClose","onSave","handleSignatureSave","img","type","signatureWidth","signatureHeight","newField","id","Date","now","x","y","page","width","height","image","pageDims","PDFRenderer","file","onPageClick","handleAddField","pageNumber","signatureFields","onUpdateField","onClick","put","signatureData","_e$response2","_e$response2$data","disabled","post","_e$response3","_e$response3$data"],"sourceRoot":""}