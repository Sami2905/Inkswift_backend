{"version":3,"file":"static/js/21.0505ed94.chunk.js","mappings":"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","sources":["../node_modules/signature_pad/src/point.ts","../node_modules/signature_pad/src/bezier.ts","../node_modules/signature_pad/src/signature_event_target.ts","../node_modules/signature_pad/src/signature_pad.ts","../node_modules/signature_pad/src/throttle.ts"],"sourcesContent":["// Interface for point data structure used e.g. in SignaturePad#fromData method\nexport interface BasicPoint {\n  x: number;\n  y: number;\n  pressure: number;\n  time: number;\n}\n\nexport class Point implements BasicPoint {\n  public x: number;\n  public y: number;\n  public pressure: number;\n  public time: number;\n\n  constructor(x: number, y: number, pressure?: number, time?: number) {\n    if (isNaN(x) || isNaN(y)) {\n      throw new Error(`Point is invalid: (${x}, ${y})`);\n    }\n    this.x = +x;\n    this.y = +y;\n    this.pressure = pressure || 0;\n    this.time = time || Date.now();\n  }\n\n  public distanceTo(start: BasicPoint): number {\n    return Math.sqrt(\n      Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2),\n    );\n  }\n\n  public equals(other: BasicPoint): boolean {\n    return (\n      this.x === other.x &&\n      this.y === other.y &&\n      this.pressure === other.pressure &&\n      this.time === other.time\n    );\n  }\n\n  public velocityFrom(start: BasicPoint): number {\n    return this.time !== start.time\n      ? this.distanceTo(start) / (this.time - start.time)\n      : 0;\n  }\n}\n","import { BasicPoint, Point } from './point';\n\nexport class Bezier {\n  public static fromPoints(\n    points: Point[],\n    widths: { start: number; end: number },\n  ): Bezier {\n    const c2 = this.calculateControlPoints(points[0], points[1], points[2]).c2;\n    const c3 = this.calculateControlPoints(points[1], points[2], points[3]).c1;\n\n    return new Bezier(points[1], c2, c3, points[2], widths.start, widths.end);\n  }\n\n  private static calculateControlPoints(\n    s1: BasicPoint,\n    s2: BasicPoint,\n    s3: BasicPoint,\n  ): {\n    c1: BasicPoint;\n    c2: BasicPoint;\n  } {\n    const dx1 = s1.x - s2.x;\n    const dy1 = s1.y - s2.y;\n    const dx2 = s2.x - s3.x;\n    const dy2 = s2.y - s3.y;\n\n    const m1 = { x: (s1.x + s2.x) / 2.0, y: (s1.y + s2.y) / 2.0 };\n    const m2 = { x: (s2.x + s3.x) / 2.0, y: (s2.y + s3.y) / 2.0 };\n\n    const l1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n    const l2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n\n    const dxm = m1.x - m2.x;\n    const dym = m1.y - m2.y;\n\n    const k = l1 + l2 == 0 ? 0 : l2 / (l1 + l2);\n    const cm = { x: m2.x + dxm * k, y: m2.y + dym * k };\n\n    const tx = s2.x - cm.x;\n    const ty = s2.y - cm.y;\n\n    return {\n      c1: new Point(m1.x + tx, m1.y + ty),\n      c2: new Point(m2.x + tx, m2.y + ty),\n    };\n  }\n\n  constructor(\n    public startPoint: Point,\n    public control2: BasicPoint,\n    public control1: BasicPoint,\n    public endPoint: Point,\n    public startWidth: number,\n    public endWidth: number,\n  ) {}\n\n  // Returns approximated length. Code taken from https://www.lemoda.net/maths/bezier-length/index.html.\n  public length(): number {\n    const steps = 10;\n    let length = 0;\n    let px;\n    let py;\n\n    for (let i = 0; i <= steps; i += 1) {\n      const t = i / steps;\n      const cx = this.point(\n        t,\n        this.startPoint.x,\n        this.control1.x,\n        this.control2.x,\n        this.endPoint.x,\n      );\n      const cy = this.point(\n        t,\n        this.startPoint.y,\n        this.control1.y,\n        this.control2.y,\n        this.endPoint.y,\n      );\n\n      if (i > 0) {\n        const xdiff = cx - (px as number);\n        const ydiff = cy - (py as number);\n\n        length += Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n      }\n\n      px = cx;\n      py = cy;\n    }\n\n    return length;\n  }\n\n  // Calculate parametric value of x or y given t and the four point coordinates of a cubic bezier curve.\n  private point(\n    t: number,\n    start: number,\n    c1: number,\n    c2: number,\n    end: number,\n  ): number {\n    // prettier-ignore\n    return (       start * (1.0 - t) * (1.0 - t)  * (1.0 - t))\n         + (3.0 *  c1    * (1.0 - t) * (1.0 - t)  * t)\n         + (3.0 *  c2    * (1.0 - t) * t          * t)\n         + (       end   * t         * t          * t);\n  }\n}\n","export class SignatureEventTarget {\n  /* tslint:disable: variable-name */\n  private _et: EventTarget;\n  /* tslint:enable: variable-name */\n\n  constructor() {\n    try {\n      this._et = new EventTarget();\n    } catch {\n      // Using document as EventTarget to support iOS 13 and older.\n      // Because EventTarget constructor just exists at iOS 14 and later.\n      this._et = document;\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject | null,\n    options?: boolean | AddEventListenerOptions,\n  ): void {\n    this._et.addEventListener(type, listener, options);\n  }\n\n  dispatchEvent(event: Event): boolean {\n    return this._et.dispatchEvent(event);\n  }\n\n  removeEventListener(\n    type: string,\n    callback: EventListenerOrEventListenerObject | null,\n    options?: boolean | EventListenerOptions,\n  ): void {\n    this._et.removeEventListener(type, callback, options);\n  }\n}\n","/**\n * The main idea and some parts of the code (e.g. drawing variable width Bézier curve) are taken from:\n * http://corner.squareup.com/2012/07/smoother-signatures.html\n *\n * Implementation of interpolation using cubic Bézier curves is taken from:\n * https://web.archive.org/web/20160323213433/http://www.benknowscode.com/2012/09/path-interpolation-using-cubic-bezier_9742.html\n *\n * Algorithm for approximated length of a Bézier curve is taken from:\n * http://www.lemoda.net/maths/bezier-length/index.html\n */\n\nimport { Bezier } from './bezier';\nimport { BasicPoint, Point } from './point';\nimport { SignatureEventTarget } from './signature_event_target';\nimport { throttle } from './throttle';\n\nexport { BasicPoint } from './point';\n\nexport interface SignatureEvent {\n  event: MouseEvent | TouchEvent | PointerEvent;\n  type: string;\n  x: number;\n  y: number;\n  pressure: number;\n}\n\nexport interface FromDataOptions {\n  clear?: boolean;\n}\n\nexport interface ToSVGOptions {\n  includeBackgroundColor?: boolean;\n}\n\nexport interface PointGroupOptions {\n  dotSize: number;\n  minWidth: number;\n  maxWidth: number;\n  penColor: string;\n  velocityFilterWeight: number;\n  /**\n   * This is the globalCompositeOperation for the line.\n   * *default: 'source-over'*\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   */\n  compositeOperation: GlobalCompositeOperation;\n}\n\nexport interface Options extends Partial<PointGroupOptions> {\n  minDistance?: number;\n  backgroundColor?: string;\n  throttle?: number;\n  canvasContextOptions?: CanvasRenderingContext2DSettings;\n}\n\nexport interface PointGroup extends PointGroupOptions {\n  points: BasicPoint[];\n}\n\nexport default class SignaturePad extends SignatureEventTarget {\n  // Public stuff\n  public dotSize: number;\n  public minWidth: number;\n  public maxWidth: number;\n  public penColor: string;\n  public minDistance: number;\n  public velocityFilterWeight: number;\n  public compositeOperation: GlobalCompositeOperation;\n  public backgroundColor: string;\n  public throttle: number;\n  public canvasContextOptions: CanvasRenderingContext2DSettings;\n\n  // Private stuff\n  /* tslint:disable: variable-name */\n  private _ctx: CanvasRenderingContext2D;\n  private _drawingStroke = false;\n  private _isEmpty = true;\n  private _lastPoints: Point[] = []; // Stores up to 4 most recent points; used to generate a new curve\n  private _data: PointGroup[] = []; // Stores all points in groups (one group per line or dot)\n  private _lastVelocity = 0;\n  private _lastWidth = 0;\n  private _strokeMoveUpdate: (event: SignatureEvent) => void;\n  private _strokePointerId: number | undefined;\n  /* tslint:enable: variable-name */\n\n  constructor(\n    private canvas: HTMLCanvasElement,\n    options: Options = {},\n  ) {\n    super();\n    this.velocityFilterWeight = options.velocityFilterWeight || 0.7;\n    this.minWidth = options.minWidth || 0.5;\n    this.maxWidth = options.maxWidth || 2.5;\n\n    // We need to handle 0 value, so use `??` instead of `||`\n    this.throttle = options.throttle ?? 16; // in milliseconds\n    this.minDistance = options.minDistance ?? 5; // in pixels\n    this.dotSize = options.dotSize || 0;\n    this.penColor = options.penColor || 'black';\n    this.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n    this.compositeOperation = options.compositeOperation || 'source-over';\n    this.canvasContextOptions = options.canvasContextOptions ?? {};\n\n    this._strokeMoveUpdate = this.throttle\n      ? throttle(SignaturePad.prototype._strokeUpdate, this.throttle)\n      : SignaturePad.prototype._strokeUpdate;\n\n    this._handleMouseDown = this._handleMouseDown.bind(this);\n    this._handleMouseMove = this._handleMouseMove.bind(this);\n    this._handleMouseUp = this._handleMouseUp.bind(this);\n    this._handleTouchStart = this._handleTouchStart.bind(this);\n    this._handleTouchMove = this._handleTouchMove.bind(this);\n    this._handleTouchEnd = this._handleTouchEnd.bind(this);\n    this._handlePointerDown = this._handlePointerDown.bind(this);\n    this._handlePointerMove = this._handlePointerMove.bind(this);\n    this._handlePointerUp = this._handlePointerUp.bind(this);\n\n    this._ctx = canvas.getContext(\n      '2d',\n      this.canvasContextOptions,\n    ) as CanvasRenderingContext2D;\n\n    this.clear();\n\n    // Enable mouse and touch event handlers\n    this.on();\n  }\n\n  public clear(): void {\n    const { _ctx: ctx, canvas } = this;\n\n    // Clear canvas using background color\n    ctx.fillStyle = this.backgroundColor;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    this._data = [];\n    this._reset(this._getPointGroupOptions());\n    this._isEmpty = true;\n    this._strokePointerId = undefined;\n  }\n\n  public fromDataURL(\n    dataUrl: string,\n    options: {\n      ratio?: number;\n      width?: number;\n      height?: number;\n      xOffset?: number;\n      yOffset?: number;\n    } = {},\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      const ratio = options.ratio || window.devicePixelRatio || 1;\n      const width = options.width || this.canvas.width / ratio;\n      const height = options.height || this.canvas.height / ratio;\n      const xOffset = options.xOffset || 0;\n      const yOffset = options.yOffset || 0;\n\n      this._reset(this._getPointGroupOptions());\n\n      image.onload = (): void => {\n        this._ctx.drawImage(image, xOffset, yOffset, width, height);\n        resolve();\n      };\n      image.onerror = (error): void => {\n        reject(error);\n      };\n      image.crossOrigin = 'anonymous';\n      image.src = dataUrl;\n\n      this._isEmpty = false;\n    });\n  }\n\n  public toDataURL(\n    type: 'image/svg+xml',\n    encoderOptions?: ToSVGOptions,\n  ): string;\n  public toDataURL(type?: string, encoderOptions?: number): string;\n  public toDataURL(\n    type = 'image/png',\n    encoderOptions?: number | ToSVGOptions | undefined,\n  ): string {\n    switch (type) {\n      case 'image/svg+xml':\n        if (typeof encoderOptions !== 'object') {\n          encoderOptions = undefined;\n        }\n        return `data:image/svg+xml;base64,${btoa(\n          this.toSVG(encoderOptions as ToSVGOptions),\n        )}`;\n      default:\n        if (typeof encoderOptions !== 'number') {\n          encoderOptions = undefined;\n        }\n        return this.canvas.toDataURL(type, encoderOptions as number);\n    }\n  }\n\n  public on(): void {\n    // Disable panning/zooming when touching canvas element\n    this.canvas.style.touchAction = 'none';\n    (\n      this.canvas.style as CSSStyleDeclaration & {\n        msTouchAction: string | null;\n      }\n    ).msTouchAction = 'none';\n    this.canvas.style.userSelect = 'none';\n\n    const isIOS =\n      /Macintosh/.test(navigator.userAgent) && 'ontouchstart' in document;\n\n    // The \"Scribble\" feature of iOS intercepts point events. So that we can\n    // lose some of them when tapping rapidly. Use touch events for iOS\n    // platforms to prevent it. See\n    // https://developer.apple.com/forums/thread/664108 for more information.\n    if (window.PointerEvent && !isIOS) {\n      this._handlePointerEvents();\n    } else {\n      this._handleMouseEvents();\n\n      if ('ontouchstart' in window) {\n        this._handleTouchEvents();\n      }\n    }\n  }\n\n  public off(): void {\n    // Enable panning/zooming when touching canvas element\n    this.canvas.style.touchAction = 'auto';\n    (\n      this.canvas.style as CSSStyleDeclaration & {\n        msTouchAction: string | null;\n      }\n    ).msTouchAction = 'auto';\n    this.canvas.style.userSelect = 'auto';\n\n    this.canvas.removeEventListener('pointerdown', this._handlePointerDown);\n    this.canvas.removeEventListener('mousedown', this._handleMouseDown);\n    this.canvas.removeEventListener('touchstart', this._handleTouchStart);\n\n    this._removeMoveUpEventListeners();\n  }\n\n  private _getListenerFunctions() {\n    const canvasWindow =\n      window.document === this.canvas.ownerDocument\n        ? window\n        : (this.canvas.ownerDocument.defaultView ?? this.canvas.ownerDocument);\n\n    return {\n      addEventListener: canvasWindow.addEventListener.bind(\n        canvasWindow,\n      ) as typeof window.addEventListener,\n      removeEventListener: canvasWindow.removeEventListener.bind(\n        canvasWindow,\n      ) as typeof window.removeEventListener,\n    };\n  }\n\n  private _removeMoveUpEventListeners(): void {\n    const { removeEventListener } = this._getListenerFunctions();\n    removeEventListener('pointermove', this._handlePointerMove);\n    removeEventListener('pointerup', this._handlePointerUp);\n\n    removeEventListener('mousemove', this._handleMouseMove);\n    removeEventListener('mouseup', this._handleMouseUp);\n\n    removeEventListener('touchmove', this._handleTouchMove);\n    removeEventListener('touchend', this._handleTouchEnd);\n  }\n\n  public isEmpty(): boolean {\n    return this._isEmpty;\n  }\n\n  public fromData(\n    pointGroups: PointGroup[],\n    { clear = true }: FromDataOptions = {},\n  ): void {\n    if (clear) {\n      this.clear();\n    }\n\n    this._fromData(\n      pointGroups,\n      this._drawCurve.bind(this),\n      this._drawDot.bind(this),\n    );\n\n    this._data = this._data.concat(pointGroups);\n  }\n\n  public toData(): PointGroup[] {\n    return this._data;\n  }\n\n  private _isLeftButtonPressed(event: MouseEvent, only?: boolean): boolean {\n    if (only) {\n      return event.buttons === 1;\n    }\n\n    return (event.buttons & 1) === 1;\n  }\n  private _pointerEventToSignatureEvent(\n    event: MouseEvent | PointerEvent,\n  ): SignatureEvent {\n    return {\n      event: event,\n      type: event.type,\n      x: event.clientX,\n      y: event.clientY,\n      pressure: 'pressure' in event ? event.pressure : 0,\n    };\n  }\n\n  private _touchEventToSignatureEvent(event: TouchEvent): SignatureEvent {\n    const touch = event.changedTouches[0];\n    return {\n      event: event,\n      type: event.type,\n      x: touch.clientX,\n      y: touch.clientY,\n      pressure: touch.force,\n    };\n  }\n\n  // Event handlers\n  private _handleMouseDown(event: MouseEvent): void {\n    if (!this._isLeftButtonPressed(event, true) || this._drawingStroke) {\n      return;\n    }\n    this._strokeBegin(this._pointerEventToSignatureEvent(event));\n  };\n\n  private _handleMouseMove(event: MouseEvent): void {\n    if (!this._isLeftButtonPressed(event, true) || !this._drawingStroke) {\n      // Stop when not pressing primary button or pressing multiple buttons\n      this._strokeEnd(this._pointerEventToSignatureEvent(event), false);\n      return;\n    }\n\n    this._strokeMoveUpdate(this._pointerEventToSignatureEvent(event));\n  };\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (this._isLeftButtonPressed(event)) {\n      return;\n    }\n\n    this._strokeEnd(this._pointerEventToSignatureEvent(event));\n  };\n\n  private _handleTouchStart(event: TouchEvent): void {\n    if (event.targetTouches.length !== 1 || this._drawingStroke) {\n      return;\n    }\n\n    // Prevent scrolling.\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    this._strokeBegin(this._touchEventToSignatureEvent(event));\n  };\n\n  private _handleTouchMove(event: TouchEvent): void {\n    if (event.targetTouches.length !== 1) {\n      return;\n    }\n\n    // Prevent scrolling.\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    if (!this._drawingStroke) {\n      this._strokeEnd(this._touchEventToSignatureEvent(event), false);\n      return;\n    }\n\n    this._strokeMoveUpdate(this._touchEventToSignatureEvent(event));\n  };\n\n  private _handleTouchEnd(event: TouchEvent): void {\n    if (event.targetTouches.length !== 0) {\n      return;\n    }\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    this._strokeEnd(this._touchEventToSignatureEvent(event));\n  };\n\n  private _getPointerId(event: PointerEvent) {\n    // @ts-expect-error persistentDeviceId is not available yet but we want to use it when it is available\n    return event.persistentDeviceId || event.pointerId;\n  }\n\n  private _allowPointerId(event: PointerEvent, allowUndefined = false): boolean {\n    if (typeof this._strokePointerId === 'undefined') {\n      return allowUndefined;\n    }\n\n    return this._getPointerId(event) === this._strokePointerId;\n  }\n\n  private _handlePointerDown(event: PointerEvent): void {\n    if (\n      this._drawingStroke ||\n      !this._isLeftButtonPressed(event) ||\n      !this._allowPointerId(event, true)\n    ) {\n      return;\n    }\n\n    this._strokePointerId = this._getPointerId(event);\n\n    event.preventDefault();\n\n    this._strokeBegin(this._pointerEventToSignatureEvent(event));\n  };\n\n  private _handlePointerMove(event: PointerEvent): void {\n    if (!this._allowPointerId(event)) {\n      return;\n    }\n    if (!this._isLeftButtonPressed(event, true) || !this._drawingStroke) {\n      // Stop when primary button not pressed or multiple buttons pressed\n      this._strokeEnd(this._pointerEventToSignatureEvent(event), false);\n      return;\n    }\n\n    event.preventDefault();\n    this._strokeMoveUpdate(this._pointerEventToSignatureEvent(event));\n  };\n\n  private _handlePointerUp(event: PointerEvent): void {\n    if (\n      this._isLeftButtonPressed(event) ||\n      !this._allowPointerId(event)\n    ) {\n      return;\n    }\n\n    event.preventDefault();\n    this._strokeEnd(this._pointerEventToSignatureEvent(event));\n  };\n\n  private _getPointGroupOptions(group?: PointGroup): PointGroupOptions {\n    return {\n      penColor: group && 'penColor' in group ? group.penColor : this.penColor,\n      dotSize: group && 'dotSize' in group ? group.dotSize : this.dotSize,\n      minWidth: group && 'minWidth' in group ? group.minWidth : this.minWidth,\n      maxWidth: group && 'maxWidth' in group ? group.maxWidth : this.maxWidth,\n      velocityFilterWeight:\n        group && 'velocityFilterWeight' in group\n          ? group.velocityFilterWeight\n          : this.velocityFilterWeight,\n      compositeOperation:\n        group && 'compositeOperation' in group\n          ? group.compositeOperation\n          : this.compositeOperation,\n    };\n  }\n\n  // Private methods\n  private _strokeBegin(event: SignatureEvent): void {\n    const cancelled = !this.dispatchEvent(\n      new CustomEvent('beginStroke', { detail: event, cancelable: true }),\n    );\n    if (cancelled) {\n      return;\n    }\n\n    const { addEventListener } = this._getListenerFunctions();\n    switch (event.event.type) {\n      case 'mousedown':\n        addEventListener('mousemove', this._handleMouseMove, {\n          passive: false,\n        });\n        addEventListener('mouseup', this._handleMouseUp, { passive: false });\n        break;\n      case 'touchstart':\n        addEventListener('touchmove', this._handleTouchMove, {\n          passive: false,\n        });\n        addEventListener('touchend', this._handleTouchEnd, { passive: false });\n        break;\n      case 'pointerdown':\n        addEventListener('pointermove', this._handlePointerMove, {\n          passive: false,\n        });\n        addEventListener('pointerup', this._handlePointerUp, {\n          passive: false,\n        });\n        break;\n      default:\n      // do nothing\n    }\n\n    this._drawingStroke = true;\n\n    const pointGroupOptions = this._getPointGroupOptions();\n\n    const newPointGroup: PointGroup = {\n      ...pointGroupOptions,\n      points: [],\n    };\n\n    this._data.push(newPointGroup);\n    this._reset(pointGroupOptions);\n    this._strokeUpdate(event);\n  }\n\n  private _strokeUpdate(event: SignatureEvent): void {\n    if (!this._drawingStroke) {\n      return;\n    }\n\n    if (this._data.length === 0) {\n      // This can happen if clear() was called while a signature is still in progress,\n      // or if there is a race condition between start/update events.\n      this._strokeBegin(event);\n      return;\n    }\n\n    this.dispatchEvent(\n      new CustomEvent('beforeUpdateStroke', { detail: event }),\n    );\n\n    const point = this._createPoint(event.x, event.y, event.pressure);\n    const lastPointGroup = this._data[this._data.length - 1];\n    const lastPoints = lastPointGroup.points;\n    const lastPoint =\n      lastPoints.length > 0 && lastPoints[lastPoints.length - 1];\n    const isLastPointTooClose = lastPoint\n      ? point.distanceTo(lastPoint) <= this.minDistance\n      : false;\n    const pointGroupOptions = this._getPointGroupOptions(lastPointGroup);\n\n    // Skip this point if it's too close to the previous one\n    if (!lastPoint || !(lastPoint && isLastPointTooClose)) {\n      const curve = this._addPoint(point, pointGroupOptions);\n\n      if (!lastPoint) {\n        this._drawDot(point, pointGroupOptions);\n      } else if (curve) {\n        this._drawCurve(curve, pointGroupOptions);\n      }\n\n      lastPoints.push({\n        time: point.time,\n        x: point.x,\n        y: point.y,\n        pressure: point.pressure,\n      });\n    }\n\n    this.dispatchEvent(new CustomEvent('afterUpdateStroke', { detail: event }));\n  }\n\n  private _strokeEnd(event: SignatureEvent, shouldUpdate = true): void {\n    this._removeMoveUpEventListeners();\n\n    if (!this._drawingStroke) {\n      return;\n    }\n\n    if (shouldUpdate) {\n      this._strokeUpdate(event);\n    }\n\n    this._drawingStroke = false;\n    this._strokePointerId = undefined;\n    this.dispatchEvent(new CustomEvent('endStroke', { detail: event }));\n  }\n\n  private _handlePointerEvents(): void {\n    this._drawingStroke = false;\n\n    this.canvas.addEventListener('pointerdown', this._handlePointerDown, {\n      passive: false,\n    });\n  }\n\n  private _handleMouseEvents(): void {\n    this._drawingStroke = false;\n\n    this.canvas.addEventListener('mousedown', this._handleMouseDown, {\n      passive: false,\n    });\n  }\n\n  private _handleTouchEvents(): void {\n    this.canvas.addEventListener('touchstart', this._handleTouchStart, {\n      passive: false,\n    });\n  }\n\n  // Called when a new line is started\n  private _reset(options: PointGroupOptions): void {\n    this._lastPoints = [];\n    this._lastVelocity = 0;\n    this._lastWidth = (options.minWidth + options.maxWidth) / 2;\n    this._ctx.fillStyle = options.penColor;\n    this._ctx.globalCompositeOperation = options.compositeOperation;\n  }\n\n  private _createPoint(x: number, y: number, pressure: number): Point {\n    const rect = this.canvas.getBoundingClientRect();\n\n    return new Point(\n      x - rect.left,\n      y - rect.top,\n      pressure,\n      new Date().getTime(),\n    );\n  }\n\n  // Add point to _lastPoints array and generate a new curve if there are enough points (i.e. 3)\n  private _addPoint(point: Point, options: PointGroupOptions): Bezier | null {\n    const { _lastPoints } = this;\n\n    _lastPoints.push(point);\n\n    if (_lastPoints.length > 2) {\n      // To reduce the initial lag make it work with 3 points\n      // by copying the first point to the beginning.\n      if (_lastPoints.length === 3) {\n        _lastPoints.unshift(_lastPoints[0]);\n      }\n\n      // _points array will always have 4 points here.\n      const widths = this._calculateCurveWidths(\n        _lastPoints[1],\n        _lastPoints[2],\n        options,\n      );\n      const curve = Bezier.fromPoints(_lastPoints, widths);\n\n      // Remove the first element from the list, so that there are no more than 4 points at any time.\n      _lastPoints.shift();\n\n      return curve;\n    }\n\n    return null;\n  }\n\n  private _calculateCurveWidths(\n    startPoint: Point,\n    endPoint: Point,\n    options: PointGroupOptions,\n  ): { start: number; end: number } {\n    const velocity =\n      options.velocityFilterWeight * endPoint.velocityFrom(startPoint) +\n      (1 - options.velocityFilterWeight) * this._lastVelocity;\n\n    const newWidth = this._strokeWidth(velocity, options);\n\n    const widths = {\n      end: newWidth,\n      start: this._lastWidth,\n    };\n\n    this._lastVelocity = velocity;\n    this._lastWidth = newWidth;\n\n    return widths;\n  }\n\n  private _strokeWidth(velocity: number, options: PointGroupOptions): number {\n    return Math.max(options.maxWidth / (velocity + 1), options.minWidth);\n  }\n\n  private _drawCurveSegment(x: number, y: number, width: number): void {\n    const ctx = this._ctx;\n\n    ctx.moveTo(x, y);\n    ctx.arc(x, y, width, 0, 2 * Math.PI, false);\n    this._isEmpty = false;\n  }\n\n  private _drawCurve(curve: Bezier, options: PointGroupOptions): void {\n    const ctx = this._ctx;\n    const widthDelta = curve.endWidth - curve.startWidth;\n    // '2' is just an arbitrary number here. If only length is used, then\n    // there are gaps between curve segments :/\n    const drawSteps = Math.ceil(curve.length()) * 2;\n\n    ctx.beginPath();\n    ctx.fillStyle = options.penColor;\n\n    for (let i = 0; i < drawSteps; i += 1) {\n      // Calculate the Bezier (x, y) coordinate for this step.\n      const t = i / drawSteps;\n      const tt = t * t;\n      const ttt = tt * t;\n      const u = 1 - t;\n      const uu = u * u;\n      const uuu = uu * u;\n\n      let x = uuu * curve.startPoint.x;\n      x += 3 * uu * t * curve.control1.x;\n      x += 3 * u * tt * curve.control2.x;\n      x += ttt * curve.endPoint.x;\n\n      let y = uuu * curve.startPoint.y;\n      y += 3 * uu * t * curve.control1.y;\n      y += 3 * u * tt * curve.control2.y;\n      y += ttt * curve.endPoint.y;\n\n      const width = Math.min(\n        curve.startWidth + ttt * widthDelta,\n        options.maxWidth,\n      );\n      this._drawCurveSegment(x, y, width);\n    }\n\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  private _drawDot(point: BasicPoint, options: PointGroupOptions): void {\n    const ctx = this._ctx;\n    const width =\n      options.dotSize > 0\n        ? options.dotSize\n        : (options.minWidth + options.maxWidth) / 2;\n\n    ctx.beginPath();\n    this._drawCurveSegment(point.x, point.y, width);\n    ctx.closePath();\n    ctx.fillStyle = options.penColor;\n    ctx.fill();\n  }\n\n  private _fromData(\n    pointGroups: PointGroup[],\n    drawCurve: SignaturePad['_drawCurve'],\n    drawDot: SignaturePad['_drawDot'],\n  ): void {\n    for (const group of pointGroups) {\n      const { points } = group;\n      const pointGroupOptions = this._getPointGroupOptions(group);\n\n      if (points.length > 1) {\n        for (let j = 0; j < points.length; j += 1) {\n          const basicPoint = points[j];\n          const point = new Point(\n            basicPoint.x,\n            basicPoint.y,\n            basicPoint.pressure,\n            basicPoint.time,\n          );\n\n          if (j === 0) {\n            this._reset(pointGroupOptions);\n          }\n\n          const curve = this._addPoint(point, pointGroupOptions);\n\n          if (curve) {\n            drawCurve(curve, pointGroupOptions);\n          }\n        }\n      } else {\n        this._reset(pointGroupOptions);\n\n        drawDot(points[0], pointGroupOptions);\n      }\n    }\n  }\n\n  public toSVG({ includeBackgroundColor = false }: ToSVGOptions = {}): string {\n    const pointGroups = this._data;\n    const ratio = Math.max(window.devicePixelRatio || 1, 1);\n    const minX = 0;\n    const minY = 0;\n    const maxX = this.canvas.width / ratio;\n    const maxY = this.canvas.height / ratio;\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n    svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n    svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n    svg.setAttribute('viewBox', `${minX} ${minY} ${maxX} ${maxY}`);\n    svg.setAttribute('width', maxX.toString());\n    svg.setAttribute('height', maxY.toString());\n\n    if (includeBackgroundColor && this.backgroundColor) {\n      const rect = document.createElement('rect');\n      rect.setAttribute('width', '100%');\n      rect.setAttribute('height', '100%');\n      rect.setAttribute('fill', this.backgroundColor);\n\n      svg.appendChild(rect);\n    }\n\n    this._fromData(\n      pointGroups,\n\n      (curve, { penColor }) => {\n        const path = document.createElement('path');\n\n        // Need to check curve for NaN values, these pop up when drawing\n        // lines on the canvas that are not continuous. E.g. Sharp corners\n        // or stopping mid-stroke and than continuing without lifting mouse.\n        if (\n          !isNaN(curve.control1.x) &&\n          !isNaN(curve.control1.y) &&\n          !isNaN(curve.control2.x) &&\n          !isNaN(curve.control2.y)\n        ) {\n          const attr =\n            `M ${curve.startPoint.x.toFixed(3)},${curve.startPoint.y.toFixed(\n              3,\n            )} ` +\n            `C ${curve.control1.x.toFixed(3)},${curve.control1.y.toFixed(3)} ` +\n            `${curve.control2.x.toFixed(3)},${curve.control2.y.toFixed(3)} ` +\n            `${curve.endPoint.x.toFixed(3)},${curve.endPoint.y.toFixed(3)}`;\n          path.setAttribute('d', attr);\n          path.setAttribute('stroke-width', (curve.endWidth * 2.25).toFixed(3));\n          path.setAttribute('stroke', penColor);\n          path.setAttribute('fill', 'none');\n          path.setAttribute('stroke-linecap', 'round');\n\n          svg.appendChild(path);\n        }\n      },\n\n      (point, { penColor, dotSize, minWidth, maxWidth }) => {\n        const circle = document.createElement('circle');\n        const size = dotSize > 0 ? dotSize : (minWidth + maxWidth) / 2;\n        circle.setAttribute('r', size.toString());\n        circle.setAttribute('cx', point.x.toString());\n        circle.setAttribute('cy', point.y.toString());\n        circle.setAttribute('fill', penColor);\n\n        svg.appendChild(circle);\n      },\n    );\n\n    return svg.outerHTML;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-this-alias */\n// Slightly simplified version of http://stackoverflow.com/a/27078401/815507\n\nexport function throttle(\n  fn: (...args: any[]) => any,\n  wait = 250,\n): (this: any, ...args: any[]) => any {\n  let previous = 0;\n  let timeout: number | null = null;\n  let result: any;\n  let storedContext: any;\n  let storedArgs: any[];\n\n  const later = (): void => {\n    previous = Date.now();\n    timeout = null;\n    result = fn.apply(storedContext, storedArgs);\n\n    if (!timeout) {\n      storedContext = null;\n      storedArgs = [];\n    }\n  };\n\n  return function wrapper(this: any, ...args: any[]): any {\n    const now = Date.now();\n    const remaining = wait - (now - previous);\n\n    storedContext = this;\n    storedArgs = args;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = now;\n      result = fn.apply(storedContext, storedArgs);\n\n      if (!timeout) {\n        storedContext = null;\n        storedArgs = [];\n      }\n    } else if (!timeout) {\n      timeout = window.setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n"],"names":["Point","constructor","x","y","pressure","time","isNaN","Error","concat","this","Date","now","distanceTo","start","Math","sqrt","pow","equals","other","velocityFrom","Bezier","fromPoints","points","widths","c2","calculateControlPoints","c3","c1","end","s1","s2","s3","dx1","dy1","dx2","dy2","m1","m2","l1","l2","k","cm","tx","ty","startPoint","control2","control1","endPoint","startWidth","endWidth","length","px","py","i","t","cx","point","cy","xdiff","ydiff","SignatureEventTarget","_et","EventTarget","_a","document","addEventListener","type","listener","options","dispatchEvent","event","removeEventListener","callback","SignaturePad","canvas","arguments","undefined","super","_drawingStroke","_isEmpty","_lastPoints","_data","_lastVelocity","_lastWidth","velocityFilterWeight","minWidth","maxWidth","throttle","minDistance","_b","dotSize","penColor","backgroundColor","compositeOperation","canvasContextOptions","_c","_strokeMoveUpdate","fn","result","storedContext","storedArgs","wait","previous","timeout","later","apply","remaining","_len","args","Array","_key","clearTimeout","window","setTimeout","prototype","_strokeUpdate","_handleMouseDown","bind","_handleMouseMove","_handleMouseUp","_handleTouchStart","_handleTouchMove","_handleTouchEnd","_handlePointerDown","_handlePointerMove","_handlePointerUp","_ctx","getContext","clear","on","ctx","fillStyle","clearRect","width","height","fillRect","_reset","_getPointGroupOptions","_strokePointerId","fromDataURL","dataUrl","Promise","resolve","reject","image","Image","ratio","devicePixelRatio","xOffset","yOffset","onload","drawImage","onerror","error","crossOrigin","src","toDataURL","encoderOptions","btoa","toSVG","style","touchAction","msTouchAction","userSelect","isIOS","test","navigator","userAgent","PointerEvent","_handlePointerEvents","_handleMouseEvents","_handleTouchEvents","off","_removeMoveUpEventListeners","_getListenerFunctions","canvasWindow","ownerDocument","defaultView","isEmpty","fromData","pointGroups","_fromData","_drawCurve","_drawDot","toData","_isLeftButtonPressed","only","buttons","_pointerEventToSignatureEvent","clientX","clientY","_touchEventToSignatureEvent","touch","changedTouches","force","_strokeBegin","_strokeEnd","targetTouches","cancelable","preventDefault","_getPointerId","persistentDeviceId","pointerId","_allowPointerId","allowUndefined","group","CustomEvent","detail","passive","pointGroupOptions","newPointGroup","Object","assign","push","_createPoint","lastPointGroup","lastPoints","lastPoint","isLastPointTooClose","curve","_addPoint","shouldUpdate","globalCompositeOperation","rect","getBoundingClientRect","left","top","getTime","unshift","_calculateCurveWidths","shift","velocity","newWidth","_strokeWidth","max","_drawCurveSegment","moveTo","arc","PI","widthDelta","drawSteps","ceil","beginPath","tt","ttt","u","uu","uuu","min","closePath","fill","drawCurve","drawDot","j","basicPoint","includeBackgroundColor","maxX","maxY","svg","createElementNS","setAttribute","toString","createElement","appendChild","_ref","path","attr","toFixed","_ref2","circle","size","outerHTML"],"sourceRoot":""}