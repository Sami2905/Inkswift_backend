{"version":3,"file":"static/js/439.c1880d90.chunk.js","mappings":"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","sources":["components/PDFViewer.jsx","pages/UploadPage.js"],"sourcesContent":["import { useState, useRef } from 'react';\r\nimport { useAuth, api } from '../context/AuthContext';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst PDFViewer = () => {\r\n  // State\r\n  const [pdfUrl, setPdfUrl] = useState('');\r\n  const [pdfFile, setPdfFile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [showUpload, setShowUpload] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [zoom, setZoom] = useState(1);\r\n  const [uploadedDoc, setUploadedDoc] = useState(null);\r\n  const [pdfBlobUrl, setPdfBlobUrl] = useState(null);\r\n\r\n  // Auth\r\n  const { token } = useAuth();\r\n\r\n  // Refs\r\n  const fileInputRef = useRef(null);\r\n  const pdfViewerRef = useRef(null);\r\n\r\n  // Helper functions\r\n  const isValidUrl = (url) => {\r\n    try {\r\n      new URL(url);\r\n      return true;\r\n    } catch (_) {\r\n      return /^(https?:\\/\\/)?([\\w.-]+)(:\\d+)?(\\/.*)?$/i.test(url);\r\n    }\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  // Event handlers\r\n  const handleLoadUrl = () => {\r\n    if (!pdfUrl.trim()) {\r\n      setError({ title: 'Missing URL', message: 'Please enter a PDF URL to load.' });\r\n      return;\r\n    }\r\n\r\n    if (!isValidUrl(pdfUrl)) {\r\n      setError({ title: 'Invalid URL', message: 'Please enter a valid URL starting with http:// or https://' });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    // Handle local development URLs\r\n    let processedUrl = pdfUrl;\r\n    if (processedUrl.includes('192.168.56.1') || processedUrl.includes('localhost') || processedUrl.includes('127.0.0.1')) {\r\n      if (!processedUrl.startsWith('https://192.168.56.1:3000/')) {\r\n        processedUrl = processedUrl.replace('192.168.56.1', '192.168.56.1:3000');\r\n      }\r\n    }\r\n\r\n    // Add to iframe\r\n    if (pdfViewerRef.current) {\r\n      pdfViewerRef.current.src = `${processedUrl}#zoom=${zoom * 100}`;\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (file.type !== 'application/pdf') {\r\n      setError({ title: 'Invalid File', message: 'Please upload a valid PDF file.' });\r\n      return;\r\n    }\r\n\r\n    setPdfFile(file);\r\n    uploadPdfFile(file);\r\n  };\r\n\r\n  const uploadPdfFile = async (file) => {\r\n    setUploadProgress(0);\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setUploadedDoc(null);\r\n    setPdfBlobUrl(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await api.post('/api/docs/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percent = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(percent);\r\n        },\r\n      });\r\n      setIsLoading(false);\r\n      setUploadProgress(100);\r\n      setUploadedDoc(response.data.document);\r\n      toast.success('PDF uploaded successfully!');\r\n      // Fetch the uploaded PDF as a blob and preview it\r\n      fetchPdfBlob(response.data.document._id);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      setUploadProgress(0);\r\n      setError({ title: 'Upload Failed', message: err.response?.data?.message || 'Failed to upload PDF.' });\r\n      toast.error('Failed to upload PDF.');\r\n    }\r\n  };\r\n\r\n  const fetchPdfBlob = async (docId) => {\r\n    setIsLoading(true);\r\n    setPdfBlobUrl(null);\r\n    try {\r\n      const res = await api.get(`/api/docs/${docId}/download`, {\r\n        responseType: 'blob',\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const blobUrl = URL.createObjectURL(res.data);\r\n      setPdfBlobUrl(blobUrl);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      // Enhanced error logging\r\n      if (err.response) {\r\n        console.error('PDF fetch error:', err.response.status, err.response.statusText, err.response.data);\r\n        setError({ title: `Load Failed (${err.response.status})`, message: err.response.statusText || 'Failed to load PDF from server.' });\r\n      } else {\r\n        console.error('PDF fetch error:', err);\r\n        setError({ title: 'Load Failed', message: 'Failed to load PDF from server.' });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    const file = e.dataTransfer.files[0];\r\n    if (file && file.type === 'application/pdf') {\r\n      setPdfFile(file);\r\n      uploadPdfFile(file);\r\n    } else {\r\n      setError({ title: 'Invalid File', message: 'Please upload a valid PDF file.' });\r\n    }\r\n  };\r\n\r\n  const handleDrag = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  // Render\r\n  return (\r\n    <div className=\"bg-gray-50 min-h-screen\">\r\n      <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-indigo-700 mb-2\">PDF Viewer</h1>\r\n          <p className=\"text-gray-600\">Upload or enter URL to view PDF documents</p>\r\n        </div>\r\n        \r\n        {/* Input Section */}\r\n        <div className=\"bg-white rounded-xl shadow-md overflow-hidden mb-8\">\r\n          <div className=\"p-6\">\r\n            <div className=\"flex flex-col md:flex-row gap-4\">\r\n              <div className=\"flex-1\">\r\n                <label htmlFor=\"pdf-url\" className=\"block text-sm font-medium text-gray-700 mb-1\">PDF URL</label>\r\n                <div className=\"flex\">\r\n                  <input \r\n                    type=\"text\" \r\n                    id=\"pdf-url\" \r\n                    placeholder=\"Enter PDF URL\"\r\n                    value={pdfUrl}\r\n                    onChange={(e) => setPdfUrl(e.target.value)}\r\n                    className=\"flex-1 px-4 py-2 border border-gray-300 rounded-l-md focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  />\r\n                  <button \r\n                    onClick={handleLoadUrl}\r\n                    className=\"px-4 py-2 bg-indigo-600 text-white rounded-r-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n                  >\r\n                    <i className=\"fas fa-search mr-1\"></i> Load\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-end\">\r\n                <button \r\n                  onClick={() => setShowUpload(!showUpload)}\r\n                  className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500\"\r\n                >\r\n                  <i className=\"fas fa-upload mr-1\"></i> Upload PDF\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Upload Section */}\r\n            {showUpload && (\r\n              <div className=\"mt-4\">\r\n                <div \r\n                  id=\"dropzone\" \r\n                  className={`border-2 border-dashed rounded-lg p-8 text-center cursor-pointer ${pdfFile ? 'border-indigo-500 bg-indigo-50' : 'border-gray-300'}`}\r\n                  onDrop={handleDrop}\r\n                  onDragOver={handleDrag}\r\n                  onDragEnter={handleDrag}\r\n                  onDragLeave={handleDrag}\r\n                  onClick={() => fileInputRef.current.click()}\r\n                >\r\n                  <input \r\n                    type=\"file\" \r\n                    ref={fileInputRef}\r\n                    id=\"pdf-file\" \r\n                    accept=\".pdf\" \r\n                    className=\"hidden\" \r\n                    onChange={handleFileChange}\r\n                  />\r\n                  <div className=\"flex flex-col items-center justify-center\">\r\n                    <i className=\"fas fa-file-pdf text-4xl text-indigo-500 mb-3\"></i>\r\n                    <p className=\"text-gray-600 mb-2\">Drag & drop your PDF file here</p>\r\n                    <p className=\"text-sm text-gray-500 mb-4\">or</p>\r\n                    <div className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 cursor-pointer\">\r\n                      <i className=\"fas fa-folder-open mr-1\"></i> Browse Files\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {uploadProgress > 0 && (\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"flex justify-between mb-1\">\r\n                      <span className=\"text-sm font-medium text-indigo-700\">Uploading...</span>\r\n                      <span className=\"text-sm font-medium text-indigo-700\">{Math.round(uploadProgress)}%</span>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n                      <div \r\n                        className=\"bg-indigo-600 h-2.5 rounded-full transition-all duration-300\" \r\n                        style={{ width: `${uploadProgress}%` }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Error Message */}\r\n        {error && (\r\n          <div className=\"bg-red-50 border-l-4 border-red-500 p-4 mb-6 rounded\">\r\n            <div className=\"flex\">\r\n              <div className=\"flex-shrink-0\">\r\n                <i className=\"fas fa-exclamation-circle text-red-500 text-xl\"></i>\r\n              </div>\r\n              <div className=\"ml-3\">\r\n                <h3 className=\"text-sm font-medium text-red-800\">{error.title}</h3>\r\n                <div className=\"mt-2 text-sm text-red-700\">\r\n                  <p>{error.message}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Loading Indicator */}\r\n        {isLoading && (\r\n          <div className=\"flex flex-col items-center justify-center p-12 bg-gray-50 rounded-xl mb-6\">\r\n            <div className=\"animate-spin text-indigo-600 text-5xl mb-4\">\r\n              <i className=\"fas fa-spinner\"></i>\r\n            </div>\r\n            <p className=\"text-gray-600\">{uploadProgress < 100 ? 'Uploading PDF document...' : 'Processing PDF...'}</p>\r\n          </div>\r\n        )}\r\n        \r\n        {/* PDF Viewer */}\r\n        {(pdfFile || pdfUrl || uploadedDoc) ? (\r\n          <div className=\"bg-white rounded-xl shadow-md overflow-hidden\">\r\n            <div className=\"flex items-center justify-between bg-gray-50 px-4 py-3 border-b\">\r\n              <h2 className=\"text-lg font-medium text-gray-800 truncate\">\r\n                {uploadedDoc?.originalName || pdfFile?.name || pdfUrl.split('/').pop() || 'document.pdf'}\r\n              </h2>\r\n              <div className=\"flex gap-2\">\r\n                <button \r\n                  onClick={() => setZoom(prev => Math.min(prev + 0.25, 3))}\r\n                  className=\"p-2 text-gray-600 hover:text-indigo-600 hover:bg-gray-100 rounded\"\r\n                >\r\n                  <i className=\"fas fa-search-plus\"></i>\r\n                </button>\r\n                <button \r\n                  onClick={() => setZoom(prev => Math.max(prev - 0.25, 0.5))}\r\n                  className=\"p-2 text-gray-600 hover:text-indigo-600 hover:bg-gray-100 rounded\"\r\n                >\r\n                  <i className=\"fas fa-search-minus\"></i>\r\n                </button>\r\n                <button \r\n                  onClick={() => {\r\n                    if (uploadedDoc) {\r\n                      window.open(`/api/docs/${uploadedDoc._id}/download`, '_blank');\r\n                    } else if (pdfFile) {\r\n                      alert(`Download would start for: ${pdfFile.name}`);\r\n                    } else if (pdfUrl) {\r\n                      alert(`Download would start from URL: ${pdfUrl}`);\r\n                    }\r\n                  }}\r\n                  className=\"p-2 text-gray-600 hover:text-indigo-600 hover:bg-gray-100 rounded\"\r\n                >\r\n                  <i className=\"fas fa-download\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"relative overflow-hidden pt-[56.25%]\">\r\n              <iframe \r\n                ref={pdfViewerRef}\r\n                className=\"absolute top-0 left-0 w-full h-full border-none\"\r\n                title=\"PDF Viewer\"\r\n                src={pdfBlobUrl || undefined}\r\n                onLoad={() => setIsLoading(false)}\r\n                onError={() => {\r\n                  setIsLoading(false);\r\n                  setError({ \r\n                    title: 'Load Failed', \r\n                    message: `Failed to load PDF. Please check the URL or file and try again.` \r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"bg-gray-50 px-4 py-3 border-t flex items-center justify-between\">\r\n              <div className=\"flex items-center gap-4\">\r\n                <button \r\n                  onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\r\n                  disabled={currentPage <= 1}\r\n                  className=\"p-2 text-gray-600 hover:text-indigo-600 hover:bg-gray-100 rounded disabled:opacity-50\"\r\n                >\r\n                  <i className=\"fas fa-chevron-left\"></i>\r\n                </button>\r\n                <span className=\"text-sm text-gray-600\">\r\n                  Page {currentPage} of 5 {/* In real app, get total pages */}\r\n                </span>\r\n                <button \r\n                  onClick={() => setCurrentPage(prev => Math.min(prev + 1, 5))}\r\n                  disabled={currentPage >= 5}\r\n                  className=\"p-2 text-gray-600 hover:text-indigo-600 hover:bg-gray-100 rounded disabled:opacity-50\"\r\n                >\r\n                  <i className=\"fas fa-chevron-right\"></i>\r\n                </button>\r\n              </div>\r\n              <div className=\"text-sm text-gray-500\">\r\n                {uploadedDoc ? formatFileSize(uploadedDoc.fileSize) : pdfFile ? formatFileSize(pdfFile.size) : 'Loading...'}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PDFViewer; ","import React from 'react';\r\nimport PDFViewer from '../components/PDFViewer';\r\n\r\nconst UploadPage = () => {\r\n  return <PDFViewer />;\r\n};\r\n\r\nexport default UploadPage; "],"names":["PDFViewer","pdfUrl","setPdfUrl","useState","pdfFile","setPdfFile","isLoading","setIsLoading","error","setError","showUpload","setShowUpload","uploadProgress","setUploadProgress","currentPage","setCurrentPage","zoom","setZoom","uploadedDoc","setUploadedDoc","pdfBlobUrl","setPdfBlobUrl","token","useAuth","fileInputRef","useRef","pdfViewerRef","formatFileSize","bytes","i","Math","floor","log","parseFloat","pow","toFixed","uploadPdfFile","async","formData","FormData","append","file","response","api","post","headers","Authorization","concat","onUploadProgress","progressEvent","percent","round","loaded","total","data","document","toast","success","fetchPdfBlob","_id","err","_err$response","_err$response$data","title","message","res","get","docId","responseType","blobUrl","URL","createObjectURL","console","status","statusText","handleDrag","e","preventDefault","stopPropagation","_jsx","className","children","_jsxs","htmlFor","type","id","placeholder","value","onChange","target","onClick","handleLoadUrl","trim","url","_","test","isValidUrl","processedUrl","includes","startsWith","replace","current","src","onDrop","dataTransfer","files","onDragOver","onDragEnter","onDragLeave","click","ref","accept","style","width","originalName","name","split","pop","prev","min","max","window","open","alert","undefined","onLoad","onError","disabled","fileSize","size","UploadPage"],"sourceRoot":""}